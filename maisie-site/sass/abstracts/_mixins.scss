// Center Images: this is traditionally very hard with React. Using Sass we make it easy. Good for backgrounds.
@mixin img-center {
  z-index: -1;
  position: absolute;
  top: 0%;
  left: 50%;
  transform: translate(-50%, 0%);
  min-width: 100%;
  min-height: 100%;
}
div.center-parent { position: relative; } // call this on the parent of the image you wish to center
img.center-child { @include img-center; } // call this on the img element you wish to center

// adds browser support for removing ability to select text
@mixin user-select($what: none) { -webkit-user-select: $what; -moz-user-select: $what; -ms-user-select: $what; -o-user-select: $what; user-select: $what; }

// adds browser support for transitions
@mixin transition($what: all, $time: 0.2s) { -webkit-transition: $what $time; -moz-transition: $what $time; -ms-transition: $what $time; -o-transition: $what $time; transition: $what $time; }

// rotation
@keyframes rotating { from { transform: rotate(0deg); } to { transform: rotate(360deg); } }
@-moz-keyframes rotating { from { -moz-transform: rotate(0deg); } to { -moz-transform: rotate(360deg); } }
@-webkit-keyframes rotating { from { -webkit-transform: rotate(0deg); } to { -webkit-transform: rotate(360deg); } }



// SCREENS

// MOBILE
@mixin mobile { @media (max-width: 600px) { @content; }}

// NOT DESKTOP
@mixin tabletandmobile { @media (max-width: 850px) { @content; }}

// DESKTOP
@mixin desktop { @media (min-width: 600px) { @content; }}

// in case you want to get more granular, below are more screen size options
@mixin size-one { @media (max-width: 600px) { @content; }}
@mixin size-two { @media (min-width: 600px) and (max-width: 800px) { @content; }}
@mixin size-three { @media (min-width: 800px) and (max-width: 950px) { @content; }}
@mixin size-four { @media (min-width: 950px) and (max-width: 1200px) { @content; }}
@mixin size-five { @media (min-width: 1200px) { @content; }}
